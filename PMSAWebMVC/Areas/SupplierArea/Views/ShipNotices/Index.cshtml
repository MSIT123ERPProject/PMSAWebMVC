@model IEnumerable<PMSAWebMVC.ViewModels.ShipNotices.shipOrderViewModel>

@{
    /**/

    ViewBag.Title = "出貨管理";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Raw(ViewBag.failMessage)
<nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">
    <h2>@PMSAWebMVC.Resources.AppResource.ShipNotice</h2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <h2 class="align-content-xl-end">@ViewBag.supplierName</h2>

</nav>
@*dropdownlist取得值得方法*@
@*http://kevintsengtw.blogspot.com/2011/09/jquery-dropdownlist-1.html*@
@*/////////////////////////////////////////////////////////////////////////////////////////////*@
<!-- DataTables Example -->
<div class="card mb-3">
    <div class="card-header">
        @*<div class="col-md-3 text-primary" style="font-size:larger;margin-left:100px">*@
        <a data-toggle="collapse" href="#collapse-rpinfo" aria-expanded="true" aria-controls="collapse-rpinfo" id="heading-rpinfo" class="d-block nounderline">
            <i class="fab fa-wpforms"></i>  請選擇已出貨或未出貨 <i class="fa fa-chevron-down"></i>
        </a>
        @*</div>*@
    </div>
    <div id="collapse-rpinfo" class="collapse show" aria-labelledby="heading-rpinfo">
        <div class="card-body">

            <div class="row">
                <div class="col-md-3" @*style="margin-left:20px"*@>
                    @Html.DropDownList("selectlist", new SelectList(new[]
                      {
                        new SelectListItem { Text = "請選擇",Value="",Selected=true },
                         new SelectListItem { Text = "未出貨", Value = "W",Selected=false },
                         //new SelectListItem { Text = "未答交",Value="P",Selected=false },
                         new SelectListItem { Text = "已出貨", Value = "S",Selected=false }
                         }, "Value", "Text"),
                      new { id = "idStatus", @class = "form-control" }
                      )
                </div>
            </div>
        </div>

    </div>
</div>
<div class="card mb-3">
    <div class="card-header">
        <a data-toggle="collapse" href="#collapse-orderinfo" aria-expanded="true" aria-controls="collapse-orderinfo" id="heading-orderinfo" class="d-block nounderline">
            <i class="fab fa-wpforms"></i>  請選擇訂單 <i class="fa fa-chevron-down"></i>
        </a>
    </div>
    <div id="collapse-orderinfo" class="collapse show" aria-labelledby="heading-orderinfo">
        <div class="card-body">
            <div class="row">
                @*=================================================================*@
                @*這裡想加一個採購單編號的下拉式選單還沒成功*@
                <div id="idOrderDiv" class="col-md-3" @*style="margin-left:50px"*@>
                    <select id="idOrder" class="form-control"></select>
                </div>
                @*=============================================================================================*@
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("shipCheckDtl", "ShipNotices", FormMethod.Post, new { name = "formTable" }))
{
    <div class="card mb-3">
        <div class="card-body" id="table">
            <div class="table-responsive" id="divTable"></div>
        </div>
        <div class="form-group">
            <div class="d-flex justify-content-center">
                <button type="submit" id="idbutton" class="btn btn-primary btn-block" value="出貨"><i class="fas fa-shipping-fast"></i>出貨</button>
            </div>
        </div>
    </div>
}
@section scripts{

    <script>
        $(document).ready(function () {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            let message = `@ViewBag.message`;
            if (message != "" ) {
                toastr.success(message, "通知");
            }
            $("#table").hide();
            $("#idbutton").hide();
            $("#idOrder").prop('disabled',true);
           // shipDatatable();
            $("#idStatus").change(function () {
                $("#idOrder").prop('disabled', false)
                $("#idStatus").prop('disabled', true);
                idOrder();
                //shipDatatable();
            });
        });

        //用來取得下拉式選單所選取的採購單編號
        function idOrder() {
            console.log($("#idStatus option:selected").val());
            var datas = { status: $("#idStatus option:selected").val() };
            console.log(datas);
            $.ajax({
                url: `@Url.Action("GetOrderbyStatus", "ShipNotices")`,
                type: "GET",
                data: datas,
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
            }).done(function (result) {
                console.log(result);
                if (!result) {
                    toastr.warning("查無資料", "通知")
                    $("#idOrder").prop("disabled", true);
                    $("#idStatus").prop("disabled", false);
                    return;
                }
                toastr.info("請選擇訂單", "通知")
                $("#idOrder").empty();
                $("#idOrder").append($(`<option></option>`).val('').text('請選擇'));
                $.each(result, function (index, item) {
                    $("#idOrder").append($(`<option></option>`).val(item.value).text(item.text));
                });
                $("#idOrder").change(function () {
                    purchaseOrderDtlForPartialView();
                    QtyText();
                   // dataTableUOD();
                    if ($("#idStatus option:selected").val() == "W") {
                        $("#table").show();
                        $("#idbutton").show();
                    }
                    else {
                        $("#table").show();
                    }
                });
                }).fail(function () {
                    alert("idOrder ajax is fail");
                });
        }
          //要求SERVER端把訂單明細資料傳回並顯示在DATATABLE上面 partialView方法
        function purchaseOrderDtlForPartialView() {
            let id = $("#idOrder option:selected").val();
            let queryId = `@Url.Action("GetPurchaseOrderDtlPatialView","ShipNotices")` + "?PurchaseOrderID=" + id;
            $.ajax({
                url: `@Url.Action("GetPurchaseOrderDtlPatialView","ShipNotices")`,
                type: "GET",
                data: { PurchaseOrderID :id },
            }).done(function (result) {
                //alert("訂單明細載入成功");
                //toastr.success("訂單明細載入成功","通知");
                $("#divTable").html('');
                $("#divTable").html(result);
                //全選、全勾消
                $("input[name=chkAll]").change(function () {
                    let checked = $(this).prop("checked");
                    $("#dataTableUOD>tbody input:checkbox").prop("checked", checked);
                });
                $("#dataTableUOD").DataTable(
                    {
                        ordering: true,
                        //預設第1欄會有排序按鈕，需指定其他排序欄位才會消失
                        order: [],
                        //如第1欄是checkbox，會造成只有縮放按鈕有效，checkbox無法使用，所以縮放按鈕要分欄
                        responsive: {
                            details: {
                                type: 'column',
                                target: 0
                            }
                        },
                        columnDefs: [{
                            targets: 0,
                            className: 'control'
                        },
                        { orderable: false, targets: [0, 1, -1] },
                        { className: 'text-center', targets: [5, 6, 7, 8, 9, 10, 11] },
                        ],
                        language: {
                            url: "@Url.Content("~/Scripts/DataTables/i18n/chinese-traditional.json")",
                        },
                    }
                );
                }).fail(function () {
                    toastr.error("訂單明細載入失敗","通知");
                //Swal.fire({
                //    icon: 'error',
                //    title: 'Oops...',
                //    text: '訂單明細載入失敗',
                //    footer: '<a href>Why do I have this issue?</a>'
                //})
            });
            //fetch方法會回傳PROMISE物件，不知道要兂麼把他轉乘HTML元素，而用JQUERY的AJAX方法回傳後會是直接的一個HTML元素
            //fetch(queryId)
            //    .then(function (response) {
            //        alert("response is " + response);
            //        if (response != null) {

            //            return Promise.resolve(response.json());
            //        }
            //    }).then(function (response) {
            //        alert("response suceeded" + response);

            //        $("#divTable").empty();
            //        $("#divTable").html(response);
            //    }).catch(function (err) {
            //        alert("error response is null" + err);
            //    })
        }

        @*先註解*@
        //要求SERVER端把訂單明細資料傳回並顯示在DATATABLE上面  ajax方法
        //因為不知道要怎麼把有勾選的集合取出來並傳給controller
        @*function purchaseOrderDtlForDataTable() {
            if ($.fn.dataTable.isDataTable("#dataTableOrderDtl")) {
                $("#dataTableOrderDtl").DataTable().destroy();
            }
           let id ="@Model.PurchaseOrderID" ;
            $("#dataTableOrderDtl").DataTable({
                "ajax": {
                    "url": `@Url.Action("GetPurchaseOrderDtl","ShipNotices")`,
                    "type": "GET",
                    "dataType": "json",
                    "data": { "purchaseOrderID": id },
                    "contentType": "application/json;charset=utf-8",
                    cache: true
                },
                //CONTROLLER傳過來的值，要用物件傳並且屬性名稱要是DATA
                "columns": [
                    {
                        "data": "PurchaseOrderDtlCode",
                        orderable: false,
                        render: function (data, type, obj, meta) {
                            return '<input type="checkbox" value="' + data + '"/>';
                        }
                    },
                    { "data":"PurchaseOrderID"},
                    {
                        "data": "PurchaseOrderDtlCode", "autoWidth": true
                    },
                    { "data": "PartName" },
                    { "data": "Qty" },
                    { "data": "QtyPerUnit" },
                    {
                        "data": "CommittedArrivalDate",
                        render: function (data, type, full, meta ) {
                                 return moment(data).format("YYYY/MM/DD");
                        }
                    }
                ]
            });
        }*@

        @*出貨按鈕AJAX的寫法但是資料傳不進shipCheckDtl的方法，所以改用PARTIALVIEW寫寫看*@
        @*先註解*@
        @*function PostCheckedOrderDtlData() {
            $("idbutton").click(function () {
                let dtlList = $("input[type='checkbox']").val();
                $.ajax({
                    url: `@Url.Action("shipCheckDtl","ShipNotices")`,
                    type: "POST",
                    dataType: "json",
                    data: $("form[name=formTable]").serialize()
                }).done(function (response) {
                    let result = response.json();
                    if (result == "suceeded") {
                        Swal.fire(
                            'Good job!',
                            'You clicked the button!',
                            'success'
                        )
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Stocks are not enough',
                            footer: '<a href>Why do I have this issue?</a>'
                        });
                    }
                }).fail(function () {
                    Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Ajax fail!',
                            footer: '<a href>Why do I have this issue?</a>'
                        });
                });

                //想試試看用fetch寫法，但還是不太熟，先放者
                let purchaseOrderID = @Model.PurchaseOrderID;
                fetch(`@Url.Action("shipCheckDtl","ShipNotices")/${purchaseOrderID}`)
                    .then(function (response) {
                        let result = response.json();
                        if (result == "suceeded") {
                            return Promise.resolve();
                        }
                        else {
                            return Promise.reject();
                        }
                    })
                    .then(function (response) {
                        Swal.fire(
                            'Good job!',
                            'You clicked the button!',
                            'success'
                        )
                    })
                    .catch(function (err) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong!',
                            footer: '<a href>Why do I have this issue?</a>'
                        });
                    });
                ///////////////////////////////////////////////////
            });
        }*@
        ///////////////////////////////////////////////////////
        //改寫SUBMIT按鈕執行動作
        function QtyText(e) {
            console.log(e);
            let content = $(e).val();
            $(e).attr("value", content);
            //這裡想寫檢查出貨數量不得大於採購數量的功能，先放著
            //let purchaseQty = e.closest('td').prev('td').val();
            //let shipQty = $(e).val();
            //if (purchaseQty < shipQty) {
            //    toastr.warning( "出貨數量不得大於採購數量","通知" );
            //}
        }
        //dataTable
        function dataTableUOD() {
            $('#dataTableUOD').DataTable({
                ordering: false,
                //預設第1欄會有排序按鈕，需指定其他排序欄位才會消失
                order: [[2, 'desc']],
                //如第1欄是checkbox，會造成只有縮放按鈕有效，checkbox無法使用，所以縮放按鈕要分欄
                responsive: {
                    details: {
                        type: 'column',
                        target: 0
                    }
                },
                columnDefs: [{
                    targets: 0,
                    className: 'control'
                },
                    { orderable: false, targets: [0, 1, -1] },
                    {className:'text-center',targets:[5,6,7,8,9,10,11]},
                ],
            });
        }
        //===============================================
        //顯示選取的採購單狀態的所有採購單
        function shipDatatable() {
            if ($.fn.dataTable.isDataTable("#dataTable")) {
                $("#dataTable").DataTable().destroy();
            }
            $("#dataTable").DataTable({
                "ajax": {
                    "url": `@Url.Action("GetPurchaseOrderList","ShipNotices")`,
                    "type": "get",
                    "dataType": "json",
                    "data": { "PurchaseOrderStatus": $('#idStatus option:selected').val() },
                    "contentType": "application/json;charset=utf-8",
                    "cache": true,
                },
                ordering: true,
                //預設第1欄會有排序按鈕，需指定其他排序欄位才會消失
                order: [],
                //如第1欄是checkbox，會造成只有縮放按鈕有效，checkbox無法使用，所以縮放按鈕要分欄
                responsive: {
                    details: {
                        type: 'column',
                        target: 0
                    }
                },
                columnDefs: [{
                    targets: 0,
                    className: 'control'
                },
                    { orderable: false, targets: [0, 1, -1] },
                    {className:'text-center',targets:[1,2,3,4,5]}
                ],
                "columns": [
                    { data: "PurchaseOrderID", render: function (data, type, row, meta) { return " "; } },
                    { "data": "PurchaseOrderStatusDisplay" },
                    {"data" : "PurchaseOrderID" },
                    { "data": "ReceiverName" },
                    { "data": "ReceiverTel" },
                    { "data": "ReceiverMobile" },
                    { "data": "ReceiptAddress" },
                    {    /*按鈕程式碼想寫在這，但失敗了*/   /* 20191107 09:12 成功了，原因在於return字串沒有正確的打好，必須注意雙引號以及單引號  */
                        //之後可以把修改庫存的頁面改成SWEETALERT的彈出視窗
                        "data": "PurchaseOrderID",
                        "render": function (data, type, row, meta) {
                            @*if (row.PurchaseOrderStatus == "P") {
                                /*未答交*/
                                return '<div class="table-data-feature"><button class="btn btn-outline-secondary btn-icon" data-toggle="tooltip" title="檢視"' + 'onclick="location.href=' + "'@Url.Action( "purchaseOrderSended","ShipNotices")" + "?id=" + data + "'" + '"'+ '><i class="far fa-eye"></i></button> </div>';
                             }*@
                            if (row.PurchaseOrderStatus == "E") {
                                /*未出貨按鈕 檢視該採購單所有的產品，並可以選擇出貨那些產品*/
                                return `<div class="table-data-feature"><button class="btn btn-outline-secondary btn-icon"  data-toggle="tooltip" title="編輯" onclick="location.href='@Url.Action( "UnshipOrderDtl","ShipNotices")?PurchaseOrderID=${data}'"><i class="far fa-edit"></i></button> </div>`;
                            }
                            else {
                                /*已出貨*/
                                return `<div class="table-data-feature"><button class="btn btn-outline-secondary btn-icon"  data-toggle="tooltip" title="編輯" name="shipped" id="${data}" onclick="location.href='@Url.Action( "UnshipOrderDtl","ShipNotices")?PurchaseOrderID=${data}'"><i class="far fa-file-alt"></i></button> </div>`;
                            }
                        }
                    }
                ],
                dom: "<'row'<'col-sm-12 col-md-5 mb-2 mt-2'B>><'row'<'col-sm-12 col-md-5'l><'col-sm-12 col-md-7'f>><t><'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                buttons: [
                    'copy', 'csv', 'excel', 'print',
                    // {
                    //        text: '匯入 Excel',
                    //        attr:  {
                    //            "data-toggle": 'modal',
                    //            "data-target": '#importModal'
                    //        }
                    //}
                ],
                language: {
                    buttons: {
                        copy: "複製",
                        print: "列印",
                        copyTitle: '已複製到剪貼簿',
                        copySuccess: {
                            _: '%d 行已複製',
                            1: '1 行已複製'
                        }
                    },
                 url: "@Url.Content("~/Scripts/DataTables/i18n/chinese-traditional.json")",
                },
                 "lengthMenu":[[10,25,50,75,100,-1],[10,25,50,75,100,"All"]],
                "order": [[1,"desc"]],
            });
            $.fn.dataTable.ext.errMode = 'throw';
            //想做子TABLE//先放者
            @*$("#dataTable tbody").on('click', 'td.details-control', function (e) {
                let td = $(this).parent('td');
                let row = td.parent('tr');
                let id = row.children('td:nth child(2)');
                let tr = $(this).closest('tr');
                let r = table.row(tr);
                $.ajax({
                    url: `@Url.Action("ChildTableForOrderDtl", "ShipNotices")`,
                    type: "GET",
                    data: { PurchaseOrderID: id }
                }).done(function (res) {
                    console.log(res);
                    let datas = res;
                    if (r.child.isShown()) {
                        r.child.hide();
                        tr.removeClass('shown');
                    }
                    else {
                        r.child(format(datas)).show();
                        tr.addClass('shown');
                    }
                    }).fail(function () {
                        alert('ajax fail');
                    });
            });*@
        }
        //function format(d) {
        //    return '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">' +
        //        '<tr>' +
        //        '<td>PurchaseOrderDtlOID:</td>' +
        //        '<td>' + d.PurchaseOrderDtlOID + '</td>' +
        //        '</tr>' +
        //        '<tr>' +
        //        '<td>PurchaseOrderDtlCode:</td>' +
        //        '<td>' + d.PurchaseOrderDtlCode + '</td>' +
        //        '</tr>' +
        //        '<tr>' +
        //        '<td>PartName:</td>' +
        //        '<td>' + d.PartName + '</td>' +
        //        '</tr>' +
        //        '<tr>' +
        //        '<td>Qty:</td>' +
        //        '<td>' + d.Qty + '</td>' +
        //        '</tr>' +
        //        '</table>';
        //}

    </script>

}
