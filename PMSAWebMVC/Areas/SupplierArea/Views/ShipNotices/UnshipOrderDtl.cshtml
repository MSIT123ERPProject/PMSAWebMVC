@model  PMSAWebMVC.ViewModels.ShipNotices.shipOrderViewModel
@{
    ViewBag.Title = "UnshipOrderDtl";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["message"] != null)
{
    @Html.Raw(TempData["message"])
}
<nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">
    <h2>出貨商品明細管理</h2>
    <h2 class="align-content-xl-end">@ViewBag.supplierName</h2>
</nav>
@using (Html.BeginForm("shipCheckDtl", "ShipNotices", FormMethod.Post, new { name = "formTable" }))
{
    <div class="card mb-3">
        <div class="card-header">
            <i class="fas fa-table"></i>
            出貨明細管理
        </div>
        <div class="card-body">
            <div class="table-responsive" id="divTable"></div>
        </div>
        <div class="card-footer small text-muted"></div>
    </div>
    if (Model.PurchaseOrderStatus != "S")
    {
    <div class="form-group">
        <div class="d-flex justify-content-center">
            <button type="submit" id="idbutton" class="btn btn-primary btn-block" value="出貨"><i class="fas fa-shipping-fast"></i>出貨</button>
        </div>
    </div>
    }
}
@section scripts{
    <script>
        $(document).ready(function () {
            //想要用DataTable的AJAX方法，但是資料無法POST到CONTROLLER
           //purchaseOrderDtlForDataTable();
            //改用partialView
            purchaseOrderDtlForPartialView();
            QtyText();
            dataTableUOD();
        });
        //要求SERVER端把訂單明細資料傳回並顯示在DATATABLE上面 partialView方法
        function purchaseOrderDtlForPartialView() {
            let id = "@Model.PurchaseOrderID";
            let queryId = `@Url.Action("GetPurchaseOrderDtlPatialView","ShipNotices")` + "?PurchaseOrderID=" + id;
            $.ajax({
                url: `@Url.Action("GetPurchaseOrderDtlPatialView","ShipNotices")`,
                type: "GET",
                data: { PurchaseOrderID :id },
            }).done(function (result) {
                //alert("訂單明細載入成功");
                toastr.success("訂單明細載入成功","通知");
                $("#divTable").html('');
                $("#divTable").html(result);
                //全選、全勾消
                $("input[name=chkAll]").change(function () {
                    let checked = $(this).prop("checked");
                    $("#dataTableUOD>tbody input:checkbox").prop("checked", checked);
                });
                $("#dataTableUOD").DataTable(
                    {
                        ordering: false,
                        //預設第1欄會有排序按鈕，需指定其他排序欄位才會消失
                        order: [[2, 'desc']],
                        //如第1欄是checkbox，會造成只有縮放按鈕有效，checkbox無法使用，所以縮放按鈕要分欄
                        responsive: {
                            details: {
                                type: 'column',
                                target: 0
                            }
                        },
                        columnDefs: [{
                            targets: 0,
                            className: 'control'
                        },
                        { orderable: false, targets: [0, 1, -1] },
                        { className: 'text-center', targets: [5, 6, 7, 8, 9, 10, 11] },
                        ],
                        language: {
                            url: "@Url.Content("~/Scripts/DataTables/i18n/chinese-traditional.json")",
                        },
                    }
                );
                }).fail(function () {
                    toastr.error("訂單明細載入失敗","通知");
                //Swal.fire({
                //    icon: 'error',
                //    title: 'Oops...',
                //    text: '訂單明細載入失敗',
                //    footer: '<a href>Why do I have this issue?</a>'
                //})
            });
            //fetch方法會回傳PROMISE物件，不知道要兂麼把他轉乘HTML元素，而用JQUERY的AJAX方法回傳後會是直接的一個HTML元素
            //fetch(queryId)
            //    .then(function (response) {
            //        alert("response is " + response);
            //        if (response != null) {

            //            return Promise.resolve(response.json());
            //        }
            //    }).then(function (response) {
            //        alert("response suceeded" + response);

            //        $("#divTable").empty();
            //        $("#divTable").html(response);
            //    }).catch(function (err) {
            //        alert("error response is null" + err);
            //    })
        }

        @*先註解*@
        //要求SERVER端把訂單明細資料傳回並顯示在DATATABLE上面  ajax方法
        //因為不知道要怎麼把有勾選的集合取出來並傳給controller
        @*function purchaseOrderDtlForDataTable() {
            if ($.fn.dataTable.isDataTable("#dataTableOrderDtl")) {
                $("#dataTableOrderDtl").DataTable().destroy();
            }
           let id ="@Model.PurchaseOrderID" ;
            $("#dataTableOrderDtl").DataTable({
                "ajax": {
                    "url": `@Url.Action("GetPurchaseOrderDtl","ShipNotices")`,
                    "type": "GET",
                    "dataType": "json",
                    "data": { "purchaseOrderID": id },
                    "contentType": "application/json;charset=utf-8",
                    cache: true
                },
                //CONTROLLER傳過來的值，要用物件傳並且屬性名稱要是DATA
                "columns": [
                    {
                        "data": "PurchaseOrderDtlCode",
                        orderable: false,
                        render: function (data, type, obj, meta) {
                            return '<input type="checkbox" value="' + data + '"/>';
                        }
                    },
                    { "data":"PurchaseOrderID"},
                    {
                        "data": "PurchaseOrderDtlCode", "autoWidth": true
                    },
                    { "data": "PartName" },
                    { "data": "Qty" },
                    { "data": "QtyPerUnit" },
                    {
                        "data": "CommittedArrivalDate",
                        render: function (data, type, full, meta ) {
                                 return moment(data).format("YYYY/MM/DD");
                        }
                    }
                ]
            });
        }*@

        @*出貨按鈕AJAX的寫法但是資料傳不進shipCheckDtl的方法，所以改用PARTIALVIEW寫寫看*@
        @*先註解*@
        @*function PostCheckedOrderDtlData() {
            $("idbutton").click(function () {
                let dtlList = $("input[type='checkbox']").val();
                $.ajax({
                    url: `@Url.Action("shipCheckDtl","ShipNotices")`,
                    type: "POST",
                    dataType: "json",
                    data: $("form[name=formTable]").serialize()
                }).done(function (response) {
                    let result = response.json();
                    if (result == "suceeded") {
                        Swal.fire(
                            'Good job!',
                            'You clicked the button!',
                            'success'
                        )
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Stocks are not enough',
                            footer: '<a href>Why do I have this issue?</a>'
                        });
                    }
                }).fail(function () {
                    Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Ajax fail!',
                            footer: '<a href>Why do I have this issue?</a>'
                        });
                });

                //想試試看用fetch寫法，但還是不太熟，先放者
                let purchaseOrderID = @Model.PurchaseOrderID;
                fetch(`@Url.Action("shipCheckDtl","ShipNotices")/${purchaseOrderID}`)
                    .then(function (response) {
                        let result = response.json();
                        if (result == "suceeded") {
                            return Promise.resolve();
                        }
                        else {
                            return Promise.reject();
                        }
                    })
                    .then(function (response) {
                        Swal.fire(
                            'Good job!',
                            'You clicked the button!',
                            'success'
                        )
                    })
                    .catch(function (err) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong!',
                            footer: '<a href>Why do I have this issue?</a>'
                        });
                    });
                ///////////////////////////////////////////////////
            });
        }*@
        ///////////////////////////////////////////////////////
        //改寫SUBMIT按鈕執行動作
        function QtyText(e) {
            console.log(e);
            let content = $(e).val();
            $(e).attr("value", content);
            //這裡想寫檢查出貨數量不得大於採購數量的功能，先放著
            //let purchaseQty = e.closest('td').prev('td').val();
            //let shipQty = $(e).val();
            //if (purchaseQty < shipQty) {
            //    toastr.warning( "出貨數量不得大於採購數量","通知" );
            //}
        }
        //dataTable
        function dataTableUOD() {
            $('#dataTableUOD').DataTable({
                ordering: false,
                //預設第1欄會有排序按鈕，需指定其他排序欄位才會消失
                order: [[2, 'desc']],
                //如第1欄是checkbox，會造成只有縮放按鈕有效，checkbox無法使用，所以縮放按鈕要分欄
                responsive: {
                    details: {
                        type: 'column',
                        target: 0
                    }
                },
                columnDefs: [{
                    targets: 0,
                    className: 'control'
                },
                    { orderable: false, targets: [0, 1, -1] },
                    {className:'text-center',targets:[5,6,7,8,9,10,11]},
                ],
            });
        }
    </script>
}