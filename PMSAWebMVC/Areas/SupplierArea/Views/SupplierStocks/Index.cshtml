@model IEnumerable<PMSAWebMVC.Models.SourceList>
@{
    ViewBag.Title = "庫存管理";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">
    <h2>庫存管理</h2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <h2 class="align-content-xl-end">@ViewBag.supplierName</h2>
</nav>
<div class="card mb-3">
    <div class="card-header">
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped hover order-column nowrap text-left" cellspacing="0" style="width:100%" id="dataTable">
                <thead>
                    <tr class="bg-primary text-white text-center">
                        <th data-priority="1"></th>
                        <th>
                            @Html.DisplayNameFor(model => model.SourceListID)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PartNumber)
                        </th>
                        <th>
                            料件名稱
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.QtyPerUnit)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UnitPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UnitsOnOrder)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UnitsInStock)
                        </th>
                        <th>安全庫存量</th>
                        <th data-priority="1">
                            調整庫存
                        </th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th data-priority="1"></th>
                        <th>
                            @Html.DisplayNameFor(model => model.SourceListID)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PartNumber)
                        </th>
                        <th>
                            料件名稱
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.QtyPerUnit)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UnitPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UnitsOnOrder)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UnitsInStock)
                        </th>
                        <th>安全庫存量</th>
                        <th data-priority="1">
                            調整庫存
                        </th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    <div class="card-footer small text-muted"></div>
</div>
@section scripts
        {
    <script>
        $(document).ready(function () {
                dataTableDisplay();
                ClickUpdateButton();
        
                table.on('responsive-resize', function (e, datatable, columns) {
                    //修正縮放大小不正確的問題
                    table.columns.adjust().responsive.recalc();
                });
        });
        /////////////////////////////////////////////
        let table;
        //dataTable顯示方法
            function dataTableDisplay() {
              if ($.fn.DataTable.isDataTable("#dataTable")) {
                    $("#dataTable").DataTable().destroy();
                }
              //  $.fn.dataTable.ext.errMode = 'throw';
         table=$('#dataTable').DataTable({
                  "ajax": {
                        "url":  `@Url.Action("GetSourcelistBySupplierCode", "SupplierStocks")`,
                        "type": "GET",
                        "dataType": "json",
                      "data": { "supplierCode": "@ViewBag.supplierCode" },
                        "contentType": "application/json;charset=utf-8",
                        "cache": true
                    },
             ordering: true,
             //預設第1欄會有排序按鈕，需指定其他排序欄位才會消失
             order: [],
             //如第1欄是checkbox，會造成只有縮放按鈕有效，checkbox無法使用，所以縮放按鈕要分欄
             responsive: {
                 details: {
                     type: 'column',
                     target: 0
                 }
             },
             columnDefs: [{
                 targets: 0,
                 className: 'control'
             },
                 { orderable: false, targets: [0, -1] },
                 //{ targets: [4, 5, 6, 7, 8], className: 'dt-body-right' },
                 { className: 'text-left', targets: [3] },
                 { className: 'text-center', targets: [1,2,4,5,6,7,8] },
             ],
             "columns": [
                 {
                     "data": null, render: function (d) {
                         return " ";
                     }
                 },
                 { "data": "SourceListID" },
                 { "data": "PartNumber" },
                 { "data": "PartName" },
                        { "data": "QtyPerUnit" },
                        { "data": "UnitPrice", render: $.fn.dataTable.render.number(',', '.', 0, '$') },
                        { "data": "UnitsOnOrder" },
                 {
                     "data": "UnitsInStock",
                     render: function (data, type, row, meta) {
                         let color = 'black';
                         let icon;
                         if (row.UnitsInStock > row.SafetyQty) {
                             color = 'blue';
                             icon = `<i class="fas fa-thumbs-up"></i>`;
                             return `<span class="badge badge-primary">${data}</span>`; 
                         }
                         else {
                             color = 'red';
                             icon = `<i class="fas fa-radiation"></i>`;
                             return `<span class="badge badge-danger">${data}</span>`;
                         }
                         return `<span class="badge badge-danger">${data}</span>`; 
                        // return `<div style="color:${color}">${icon}${data}</div>`;
                     }
                 },
                        {
                         "data": "SafetyQty"
                        },
                        {
                            "data": "SourceListID",
                            "render": function (data, type, row, meta) {
                                return `<div class="table-data-feature"><button class="btn btn-outline-secondary btn-icon" data-toggle="tooltip" title="編輯" name="UpdateStock" id="${data}"><i class="far fa-edit"></i></button></div>`;
                                //return '<button class="btn btn-primary"' + 'name="UpdateStock"' + 'id="' + data + '">調整庫存</button>';
                            }
                        },
                    ],
             //       fixedColumns: {
             //           leftColumns: 2,
             //},
                      language: {
                        url: "@Url.Content("~/Scripts/DataTables/i18n/chinese-traditional.json")",
                    },
                    "lengthMenu": [[10, 25, 50, 75, 100, -1], [10, 25, 50, 75, 100, "All"]],
                    "order": [[1, "asc"]],
                    //"sDom": '<"wraptop"<"top fl"fl><"top"p>>',
             "autoWidth": false,
             //dom: 'lfrtip',
             //ordering: true,
             //order: [],
             dom: "<'row'<'col-sm-12 col-md-5 mb-2 mt-2'B>><'row'<'col-sm-12 col-md-5'l><'col-sm-12 col-md-7'f>><t><'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                buttons: [
                    'copy', 'csv', 'excel', 'print',
                    // {
                    //        text: '匯入 Excel',
                    //        attr:  {
                    //            "data-toggle": 'modal',
                    //            "data-target": '#importModal'
                    //        }
                    //}
                ],
                language: {
                    buttons: {
                        copy: "複製",
                        print: "列印",
                        copyTitle: '已複製到剪貼簿',
                        copySuccess: {
                            _: '%d 行已複製',
                            1: '1 行已複製'
                        }
                    },
                 url: "@Url.Content("~/Scripts/DataTables/i18n/chinese-traditional.json")",
                },
                });
        }
        /////////////////////////////////////////////////////
        //調整庫存按鈕
        function ClickUpdateButton() {
            $(document).on('click', "button[name='UpdateStock']", async function () {
                let td = $(this).parent('td');
                let tr = td.parent('tr');
                console.log(tr);
                let stock = tr.children('td:nth-child(8)').text();
                console.log(stock);
                let id = $(this).prop('id');
                const { value: formValues } = await Swal.fire({
                    title: '庫存數量修改',
                    html:
                        //'<Label swal-label>請輸入數量</Label>' +
                        `<input id="stock" class="swal2-input" value="${stock}">`,
                    showCancelButton: true,
                    cancelButtonColor: '#d33',
                    cancelButtonText: '取消',
                    focusConfirm: false,
                    preConfirm: () => {
                        return [
                            document.getElementById('stock').value,
                        ]
                    }
                })
                    //呼叫UpdateStock方法修改庫存
                if (formValues && parseInt(formValues[0]) >= 0) {
                    let uisChange = parseInt(formValues[0]);
                    let jsondata = JSON.stringify({ SourceListID: id, UnitsInStock: uisChange });
                    $.ajax({
                        url: "@Url.Action("UpdateStock", "SupplierStocks")",
                        type: "POST",
                        data: jsondata,
                        contentType: "application/json",
                        dataType: "JSON"
                    }).done(function (res) {
                        console.log(res);
                        if (res.status == "saved") {
                            // alert("庫存已修改");
                            dataTableDisplay();
                            toastr.success(res.message, "通知");
                            //  table.row(tr).cell(':eq(6)').data(uisChange).draw();
                        }
                        if (res.status == "savefail") {
                            //alert("庫存修改失敗，庫存不得小於零");
                            toastr.error(res.message, "通知");
                        }
                    }).fail(function (err) {
                        alert("ajax fail  " + err.responseJSON);
                    });
                }
                else if (formValues &&parseInt(formValues[0]) < 0) {
                    toastr.error("庫存不得小於零", "警告");
                }
                else {
                    toastr.error("取消", "警告");
                }
            }); 
        }
        ///////////////////////////////////////////////////
    </script>
}









<!-- DataTables Example---------------------------------------------------------------------------------------------------------------- -->
@*<div class="card mb-3">
            <div class="card-header">
                <i class="fas fa-table"></i>
                Data Table Example
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered" id="dataTable" cellspacing="0" style="width:100%">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.SourceListOID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PartNumber)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Batch)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Discount)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.DiscountBeginDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.DiscountEndDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.CreateDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.UnitsInStock)
                                </th>
                                <th>
                                    編輯
                                </th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.SourceListOID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PartNumber)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Batch)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Discount)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.DiscountBeginDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.DiscountEndDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.CreateDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.UnitsInStock)
                                </th>
                                <th>
                                    編輯
                                </th>
                            </tr>
                        </tfoot>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.SourceListOID)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PartNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Batch)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Discount)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DiscountBeginDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DiscountEndDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CreateDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => item.UnitsInStock)
                                    </td>
                                    <td>
                                        @Html.ActionLink("Edit", "Edit", new { id = item.SourceListOID }) |
                                        @Html.ActionLink("Details", "Details", new { id = item.SourceListOID }) |
                                        @Html.ActionLink("Delete", "Delete", new { id = item.SourceListOID })
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>
        </div>
        @section scripts
    {
            <script>
                $(document).ready(function () {
                    $('#dataTable').DataTable();
                });
            </script>

        }*@
