@model PMSAWebMVC.ViewModels.PurchaseRequisitions.PurchaseRequisitionCreateViewModel
@{
    ViewBag.Title = "新增請購單";
}

<h2>@ViewBag.Title</h2>



<div class="card mb-3">
    <div class="card-header">
        <i class="fab fa-wpforms"></i> 請購單
    </div>
    <div class="card-body">
        <div class="form-horizontal">
            <div class="form-group row">
                @Html.LabelFor(m => m.SelectedProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(m => m.SelectedProductName, Model.ProductList, "請選擇", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.SelectedProductName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card mb-3">
    <div class="card-header">
        <i class="far fa-building"></i> 請購單明細
    </div>
    <div class="card-body">
        <div class="form-horizontal">
            <div class="form-group row">
                @Html.LabelFor(m => m.SelectedPartName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(m => m.SelectedPartName, Model.PartList, "請選擇", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.SelectedPartName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
</div>



<div class="card mb-3">
    <div class="card-header">
        <i class="far fa-building"></i> 貨源清單
    </div>
    <div class="card-body">
        <div class="form-horizontal">
            <div class="form-group row">
                @Html.LabelFor(m => m.SelectedSupplierName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(m => m.SelectedSupplierName, Model.PartList, "請選擇", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.SelectedSupplierName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="card-body mb-0 pb-0 pt-2 border-top-dashed mt-3">
                <div class="row">
                    <div class="col-md-3 col-6">
                        @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3 col-sm-6">
                        <div class="form-group">
                            <label class="control-label " for="DateRequired">@Html.DisplayNameFor(model => model.DateRequired)</label>
                            <div class="input-group date" id="DateRequired" data-target-input="nearest">
                                <input type="text" id="DateRequired2" class="form-control datetimepicker-input" data-target="#DateRequired" data-toggle="datetimepicker" name="da" />
                                <div class="input-group-append" data-target="#DateRequired" data-toggle="datetimepicker">
                                    <div class="input-group-text">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
    </div>
</div>
<div class="form-group">
    <div class="d-flex justify-content-center">
        <button id="btnSubmit1" type="submit" class="btn btn-primary btn-block"><i class="far fa-paper-plane"></i>新增</button>
    </div>
</div>


@using (Html.BeginForm("Createtest", "PurchaseRequisitions", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="card mb-3">
        <div class="card-header">
            <i class="fas fa-list"></i> 請購細項
        </div>
        <div class="card-body">
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-warning" id="warning">
                    <a href="#" class="close" data-dismiss="alert">&times;</a>
                    @TempData["ErrorMessage"]
                </div>
            }
            <div class="table-responsive" id="dataTablesContainer"></div>
        </div>
    </div>

    <div class="form-group">
        <div class="d-flex justify-content-center">
            @Html.ActionLink("送出申請", "CreatePR", null, new { @class = "btn btn-primary btn-block" })
            @*<button id="btnSubmit2" type="button" class="btn btn-success btn-block"><i class="far fa-paper-plane"></i>送出申請</button>*@
        </div>
    </div>

}

@section scripts
{
    <script>
        $(document).ready(function () {
            getday() 
            load();

            let PartListUrl = '@Url.Action("GetPartList", "PurchaseRequisitions")';
            let PartList = $('#SelectedPartName');
            $("#btnSubmit").prop("disabled", true);

            $('#SelectedProductName').change(function() {
              PartList.empty();
            //$("#dataTablesContainer").html('');
                $.getJSON(PartListUrl, { id: $(this).val() }, function (data) {
                if (!data) {
                    return;
                }
                 PartList.append($('<option></option>').val('').text('請選擇'));
                $.each(data, function (index, item) {
                    PartList.append($('<option></option>').val(item.Value).text(item.Text));
                });
                $("#btnSubmit").prop("disabled", true);
            });
            })

             let supplierListUrl = '@Url.Action("GetSupplierList", "PurchaseRequisitions")';
            let supplierList = $('#SelectedSupplierName');
            $("#btnSubmit").prop("disabled", true);

            $('#SelectedPartName').change(function() {
            supplierList.empty();
            //$("#dataTablesContainer").html('');
            $.getJSON(supplierListUrl, { id: $(this).val() }, function (data) {
                if (!data) {
                    return;
                }
                supplierList.append($('<option></option>').val('').text('請選擇'));
                $.each(data, function (index, item) {
                    supplierList.append($('<option></option>').val(item.Value).text(item.Text));
                });
                $("#btnSubmit").prop("disabled", true);
            });
            })

            $('#btnSubmit1').click(function () {//查詢暫存請購明細並存在站存表
                $.ajax({
                    url: "@Url.Action("GetPurchaseRequisitionsDtlTab", "PurchaseRequisitions")",//取得請購單明細資料集,請購單
                    type: "get",
                    data: {
                        DateRequired: $("#DateRequired2").val(),//傳回需求日期
                        Qty: $("#Qty").val(),//傳回請購數量
                        SupplierCode: $("#SelectedSupplierName").val(),
                        productName: $("#SelectedProductName").val(),
                        partNumber: $("#SelectedPartName").val()
                    },
                }).done(function (result) {
                    $("#dataTablesContainer").html(result);
                    $("#warning").remove();
                    $("#ProductNume").val($("#SelectedProductName").val());//產品名稱(ID),查詢產品名稱

                    //全選、全勾消
                    $("input[name=chkAll]").change(function () {
                        let checked = $(this).prop("checked");
                        $("#dataTable > tbody input:checkbox").prop("checked", checked);
                    });
                    $("#btnSubmit").prop("disabled", false);
                }).fail(function (e) {
                    alert(e.responseText);
                });

                $.fn.dataTable.ext.errMode = 'throw';

                $('#dataTable').DataTable(
                    {
                        paging: false,
                        ordering: false,
                        searching: false,
                        language: {
                            url: "@Url.Content("~/Scripts/dataTables_js / i18n / Chinese - traditional.json")",
                                  },
                    });
            })

        });
        function load() {
            $.ajax({
                    url: "@Url.Action("load", "PurchaseRequisitions")",//取得請購單明細資料集,請購單
                    type: "get",
            }).done(function (result) {

                    $("#dataTablesContainer").html(result);
                    //$("#warning").remove();
                    //$("#ProductNume").val($("#SelectedProductName").val());//產品名稱(ID),查詢產品名稱

                    ////全選、全勾消
                    //$("input[name=chkAll]").change(function () {
                    //    let checked = $(this).prop("checked");
                    //    $("#dataTable > tbody input:checkbox").prop("checked", checked);
                    //});
                    $("#btnSubmit1").prop("disabled", false);
                }).fail(function (e) {
                    alert(e.responseText);
                });
        }
        function getday() { //取日期
            var d = new Date();
            var day = d.getDate();
            var month = d.getMonth() + 1;
            var year = d.getFullYear();
            if (day < 10) {
                day = "0" + day;
            }
            if (month < 10) {
                month = "0" + month;
            }
            var date = year + "/" + month + "/" + day;

            var mydate = new Date();
            var t = mydate.toLocaleString();
            $('#DateRequired').children("input").val(date);

        }
    </script>
}