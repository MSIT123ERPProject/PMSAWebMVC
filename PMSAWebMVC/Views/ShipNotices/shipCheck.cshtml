@model PMSAWebMVC.Models.PurchaseOrder

@{
    ViewBag.Title = "shipCheck";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Raw(TempData["failmessage"])
@Html.Raw(TempData["successmessage"])
<h2>shipCheck</h2>

<div>
    <h4>PurchaseOrder</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.PurchaseOrderOID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PurchaseOrderOID)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PurchaseOrderID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PurchaseOrderID)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReceiverName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReceiverName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReceiverTel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReceiverTel)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReceiverMobile)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReceiverMobile)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReceiptAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReceiptAddress)
        </dd>
        <dt>
            出貨金額
        </dt>
        <dd>
            @ViewBag.amount
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Employee.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Employee.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SupplierInfo.SupplierName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SupplierInfo.SupplierName)
        </dd>
    </dl>
</div>
<p>
    <button><a id="idshipCheck" data-wc="@Model.PurchaseOrderID">確定出貨</a> </button>
    @*@Html.ActionLink("確定出貨", "shipChecked", new { id = Model.PurchaseOrderID }) |*@
    @Html.ActionLink("回至查詢頁面", "Index")
</p>
<div id="message"></div>


@section scripts{
    <script>
        $(document).ready(function () {

        });

        $("#idshipCheck").click(function () {
            Swal.fire({
                title: '確定出貨?',
                text: "出貨後將發出通知",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '確定出貨',
                cancelButtonText:'取消'
            }).then((result) => {
                if (result.value) {
                    let idship = this.dataset.wc;
                    $.ajax({//如果方法那邊貼上[httppost] 不知道為甚麼他跟我要該控制器方法同名的VIEW，難道每個方法都要有自己的VIEW?
                            //解決了，原因為同一個方法執行了2次，在按鈕執行了一次，在這裡又執行了一次
                        url: `@Url.Action("shipChecked","ShipNotices")` ,
                        type: 'GET',
                        dataType:'json',
                        data: { id : idship }
                    }).done(function (result) {
                        $("#message").html(result);
                        //想寫轉網址功能，但是失敗了QQ，先來寫HIGHCHART
                        //window.location.href = "url_to_redirect";
                        @*let path = `@Url.Action("Index", "ShipNotices")`;*@
                       // "<script>" + "document.location.href='" + path + "';<" + "/script>"
                       @*@Url.Content( "~/ShipNotices/shipCheck" );*@
                    }).fail(function () {
                            Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: '處理出貨時發生錯誤',
                            footer:""
                            })
                    });
                }
            })
        });
    </script>
}
