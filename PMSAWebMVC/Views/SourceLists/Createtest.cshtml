@model PMSAWebMVC.ViewModels.SourceLists.SourceListsCreateViewModel
@{
    ViewBag.Title = "新增貨源清單";
}

<h2>@ViewBag.Title</h2>




<div class="card mb-3">
    <div class="card-header">
        <i class="fab fa-wpforms"></i> 貨源清單
    </div>
    <div class="card-body">
        <div class="form-horizontal">
            <div class="form-group row">
                @Html.LabelFor(m => m.SelectedSupplierName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-5 mb-4">
                    @Html.DropDownListFor(m => m.SelectedSupplierName, Model.SupplierList, "請選擇", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.SelectedSupplierName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(m => m.SelectedPartName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-5 mb-4">
                    @Html.DropDownListFor(m => m.SelectedPartName, Model.PartList, "請選擇", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.SelectedPartName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="card-body mb-0 pb-0 pt-2 border-top-dashed mt-3">
                <div class="row">
                    <div class="col-md-3 col-6">
                        @Html.LabelFor(model => model.MOQ, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.MOQ, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MOQ, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3 col-6">
                        @Html.LabelFor(model => model.QtyPerUnit, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.QtyPerUnit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QtyPerUnit, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3 col-6">
                        @Html.LabelFor(model => model.EXP, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.EXP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EXP, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="card-body mb-0 pb-0 pt-2 border-top-dashed mt-3">
                <div class="row">
                    <div class="col-md-3 col-6">
                        @Html.LabelFor(model => model.SafetyQty, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.SafetyQty, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SafetyQty, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3 col-6">
                        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>








<div class="card mb-3">
    <div class="card-header">
        <i class="fab fa-wpforms"></i> 貨源清單明細
    </div>
    <div class="card-body">
        <div class="card-body mb-0 pb-0 pt-2 border-top-dashed mt-3">
            <div class="row">
                <div class="col-md-3 col-6">
                    @Html.LabelFor(model => model.QtyDemanded, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.EditorFor(model => model.QtyDemanded, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QtyDemanded, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3 col-6">
                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="form-group">
                        <label class="control-label col-md-5" for="DiscountEndDate">@Html.DisplayNameFor(model => model.DiscountEndDate)</label>
                        <div class="input-group date" id="DiscountEndDate" data-target-input="nearest">
                            <input type="text" id="DiscountEndDate2" class="form-control datetimepicker-input" data-target="#DiscountEndDate" data-toggle="datetimepicker" name="da"/>
                            <div class="input-group-append" data-target="#DiscountEndDate" data-toggle="datetimepicker">
                                <div class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="form-group">
                        <label class="control-label col-md-5" for="DiscountBeginDate">@Html.DisplayNameFor(model => model.DiscountEndDate)</label>
                        <div class="input-group date" id="DiscountBeginDate" data-target-input="nearest">
                            <input type="text" id="DiscountBeginDate2" class="form-control datetimepicker-input" data-target="#DiscountBeginDate" data-toggle="datetimepicker" name="da"/>
                            <div class="input-group-append" data-target="#DiscountBeginDate" data-toggle="datetimepicker">
                                <div class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>

<div class="form-group">
    <div class="d-flex justify-content-center">
        <button id="btnSubmit1" type="submit" class="btn btn-primary btn-block"><i class="far fa-paper-plane"></i>新增</button>
    </div>
</div>


@Html.AntiForgeryToken()
<div class="card mb-3">
    <div class="card-header">
        <i class="fas fa-list"></i> 貨源清單細項
    </div>
    <div class="card-body">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-warning" id="warning">
                <a href="#" class="close" data-dismiss="alert">&times;</a>
                @TempData["ErrorMessage"]
            </div>
        }
        <div class="table-responsive" id="dataTablesContainer"></div>
    </div>
</div>

<div class="form-group">
    <div class="d-flex justify-content-center">
        @*@Html.ActionLink("完成", "CreatePR", null, new { @class = "btn btn-success btn-block" })*@
        <button id="btnSubmit2" type="button" class="btn btn-primary btn-block"><i class="far fa-paper-plane"></i>完成</button>
    </div>
</div>


@section scripts
{
    <script>
           $(document).ready(function () {
       getday()
        });


        $('#btnSubmit1').click(function () {//新增
            $.ajax({
                url: "@Url.Action("Creat", "SourceLists")",
                type: "get",
                data: {
                    SupplierCode: $("#SelectedSupplierName").val(),
                    PartNumber: $("#SelectedPartName").val(),
                    MOQ: $("#MOQ").val(),
                    QtyPerUnit: $("#QtyPerUnit").val(),
                    SafetyQty: $("#SafetyQty").val(),
                    UnitPrice: $("#UnitPrice").val(),
                    EXP: $("#EXP").val(),
                    DiscountBeginDate: $("#DiscountBeginDate2").val(),
                    Discount: $("#Discount").val(),
                    DiscountEndDate: $("#DiscountEndDate2").val(),
                    QtyDemanded: $("#QtyDemanded").val(),
                },
            }).done(function (result) {
                $("#dataTablesContainer").html(result);
                $("#warning").remove();
                $("#ProductNume").val($("#SelectedProductName").val());
                $('*[name="da"]').attr('disabled', true);
        $('#SelectedSupplierName').attr('disabled', true);
        $('#SelectedPartName').attr('disabled', true);
        $('#MOQ').attr('disabled', true);
        $('#UnitPrice').attr('disabled', true);
        $('#SafetyQty').attr('disabled', true);
        $('#QtyPerUnit').attr('disabled', true);
        $('#EXP').attr('disabled', true);
        $('*#sourceListDtlOID2').hide();$('*#sourceListDtlOID').hide();

                $("#btnSubmit").prop("disabled", false);
            }).fail(function (e) {
                alert(e.responseText);
            });
        });

        $('#btnSubmit2').click(function () {//完成
        $('*[name="da"]').attr('disabled', false);
        $('#SelectedSupplierName').attr('disabled', false);
        $('#SelectedPartName').attr('disabled', false);
        $('#MOQ').attr('disabled', false);
        $('#UnitPrice').attr('disabled', false);
        $('#SafetyQty').attr('disabled', false);
        $('#QtyPerUnit').attr('disabled', false);
        $('#EXP').attr('disabled', false);
        $("#warning").remove();$("#dataTablesContainer").remove();

        $("#SelectedSupplierName")[0].selectedIndex = 0;
        $("#SelectedPartName")[0].selectedIndex = 0;
        $("#MOQ").val(0);$("#UnitPrice").val(0);$("#SafetyQty").val(0);$("#QtyPerUnit").val(0);$("#EXP").val(0);

        $("#Discount").val(0.00);$("#QtyDemanded").val(0);
        getday()


        });

        function getday() { //取日期
             var d = new Date();
    var day = d.getDate();
    var month = d.getMonth() + 1;
    var year = d.getFullYear();
    if (day < 10) {
        day = "0" + day;
    }
    if (month < 10) {
        month = "0" + month;
    }
    var date = year+ "/" + month + "/" +  day;

        var mydate = new Date();
    var t=mydate.toLocaleString();
        $('#DiscountBeginDate').children("input").val(date);
        $('#DiscountEndDate').children("input").val(date);
        }





         //刪除
        $(document).on('click', "button[name = 'click01']", function () {
            var $this = $(this);
            var table = $('#dataTable').DataTable();
            let id1 = this.dataset.wc;
            if(id1 == undefined){
                id1 = $(this).parents('tr').find('td:first-child').text();
        $('*#sourceListDtlOID2').hide();$('*#sourceListDtlOID').hide();
            }
            Swal.fire({
                title: '確定要刪除 ?',
                text: "刪除後你將沒有機會後悔 !",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: '取消',
                confirmButtonText: '刪除'
            }).then((result) => {
                if (result.value) {

                    $.ajax({
                        url: `@Url.Action("DeleteDtl", "SourceLists")`,
                        type: 'POST',
                        data: { id: id1 }

                    }).done(function () {
                        Swal.fire(
                            '刪除成功 !',
                            '此資料已被刪除',
                            'success'
                        );
                        table.row($($this).parents('tr')).remove().draw();
                    }).fail(function () {
                            toastr.error("刪除失敗", "警告");
                        })
                    }
                })
        });



    </script>
}